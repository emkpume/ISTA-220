emeka mkpume
discussion questions
1. a console application main defines the point at which the program start.

2.the main method designate the program entry point. this method should be defined
 in the manner specified in the program class as a static method; otherwise the .NET framework
 might not recognize it as the stating point for your application when you run it. 
 
3.A namespace is a declarative region that provides a scope to the identifiers 
(the names of types, functions, variables, etc) inside it. 
Namespaces are used to organize code into logical groups and to prevent name collisions 
that can occur especially when your code base includes multiple libraries.
Namespaces are used to provide a "named space" in which your application resides.
 They're used especially to provide the C# compiler a context for all the named information
 in your program, such as variable names. Without namespaces, for example,
 you wouldn't be able to make a class named Console, as 

4. The using statement calls the Dispose method on the object in the correct way, and
 (when you use it as shown earlier) it also causes the object itself to go out of scope
 as soon as Dispose is called. Within the using block, the object is read-only and cannot be modified or reassigned.
A using statement, in C#, is a statement that contains the "using" keyword and provides
 the syntax to specify the scope of the use of a resource object. 
The using statement is useful for objects whose lifetimes are within the method or block in which they are created.

5. an assembly is a chuck of executable code.

6. A using directive simply brings the items in a namespace into scope and frees you from having to fully qualify 
the names of classes in your code.
 Classes are compiled into assemblies. 
An assembly is a ﬁ le that usually has the .dll ﬁ le name extension, although strictly speaking, executable programs 
with the .exe ﬁ le name extension are also assemblies. An assembly can contain many classes. The classes that the .NET Framework 
class library includes, such as System.Console, are provided in assemblies that are installed on your computer together with
 Visual Studio. You will ﬁ nd that the .NET Framework class library contains thousands of classes. 
If they were all held in the same assembly, the assembly would be huge and difﬁ cult to maintain. 
(If Microsoft were to update a single method in a single class, it would have to distribute the entire 
class library to all developers!) For this reason, the .NET Framework class library is split into a number
 of assemblies, partitioned by the functions that they perform or the technology that they implement.
 For example, a “core” assembly (actually called mscorlib.dll) contains all the common classes,
 such as System.Console, and other assemblies contain classes for manipulating databases, accessing web services, 
building GUIs, and so on. If you want to make use of a class in an assembly, you must add a reference
 to that assembly to your project. You can then add using directives to your code that bring the items 
in namespaces in that assembly into scope. 

7.  Remember that in a console application Main deﬁnes the point at which the program starts.
 A graphical application is slightly different. is a form of user interface that allows users to interact with electronic 
devices through graphical icons and visual indicators such as secondary notation, instead of text-based user interfaces,
 typed command labels or text navigation.
8. 